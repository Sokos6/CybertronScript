{"ast":null,"code":"import _slicedToArray from \"/Users/sokos6/Downloads/money-heist-episode-picker-react-and-typescript-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/sokos6/Downloads/money-heist-episode-picker-react-and-typescript-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sokos6/Downloads/money-heist-episode-picker-react-and-typescript-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sokos6/Downloads/money-heist-episode-picker-react-and-typescript-web-app/src/Store.tsx\";\n\nimport React, { useReducer, createContext } from 'react';\nvar initialState = {\n  episodes: [],\n  favourites: []\n};\nexport var Store = createContext(initialState);\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_DATA':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        episodes: action.payload\n      });\n    //Add the `ADD_FAV` action..\n\n    case 'ADD_FAV':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favourites: [].concat(_toConsumableArray(state.favourites), [action.payload])\n      });\n    //ADD REMOVE FAV\n\n    case 'REMOVE_FAV':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favourites: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var StoreProvider = function StoreProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return /*#__PURE__*/React.createElement(Store.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/sokos6/Downloads/money-heist-episode-picker-react-and-typescript-web-app/src/Store.tsx"],"names":["React","useReducer","createContext","initialState","episodes","favourites","Store","reducer","state","action","type","payload","StoreProvider","children","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,IAAMC,YAAoB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,EADiB;AAE3BC,EAAAA,UAAU,EAAE;AAFe,CAA7B;AAIA,OAAO,IAAMC,KAAK,GAAGJ,aAAa,CAAeC,YAAf,CAA3B;;AACP,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAgBC,MAAhB,EAA4C;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,6CAAYF,KAAZ;AAAmBJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAApC;AACF;;AACA,SAAK,SAAL;AACE,6CAAYH,KAAZ;AAAmBH,QAAAA,UAAU,+BAAMG,KAAK,CAACH,UAAZ,IAAwBI,MAAM,CAACE,OAA/B;AAA7B;AACF;;AACA,SAAK,YAAL;AACE,6CAAYH,KAAZ;AAAmBH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAAtC;;AACF;AACE,aAAOH,KAAP;AAVJ;AAYD,CAbD;;AAcA,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,OAA6D;AAAA,MAA1DC,QAA0D,QAA1DA,QAA0D;;AAAA,oBAC9DZ,UAAU,CAACM,OAAD,EAAUJ,YAAV,CADoD;AAAA;AAAA,MACjFK,KADiF;AAAA,MAC1EM,QAD0E;;AAExF,sBAAO,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAF;AAASM,MAAAA;AAAT,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CD,QAA7C,CAAP;AACD,CAHM","sourcesContent":["import React, { useReducer, createContext } from 'react'\r\nimport { IState, IAction } from './types/interfaces'\r\nconst initialState: IState = {\r\n  episodes: [],\r\n  favourites: []\r\n}\r\nexport const Store = createContext<IState | any>(initialState)\r\nconst reducer = (state: IState, action: IAction): IState => {\r\n  switch (action.type) {\r\n    case 'FETCH_DATA':\r\n      return { ...state, episodes: action.payload }\r\n    //Add the `ADD_FAV` action..\r\n    case 'ADD_FAV':\r\n      return { ...state, favourites: [...state.favourites, action.payload] }\r\n    //ADD REMOVE FAV\r\n    case 'REMOVE_FAV':\r\n      return { ...state, favourites: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const StoreProvider = ({ children }: JSX.ElementChildrenAttribute): JSX.Element => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  return <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\r\n}\r\n "]},"metadata":{},"sourceType":"module"}